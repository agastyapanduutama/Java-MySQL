import com.sun.rowset.internal.Row;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import northwind_java.koneksi;
import java.io.FileNotFoundException;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
// import org.apache.poi.hssf.usermodel.Row;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;          
import org.apache.poi.hssf.usermodel.HSSFRow;

/**
 *
 * @author LENOVO Created By Agastya Pandu Satriya Utama
 */


            
public class product_form extends javax.swing.JFrame {
    
   
 
    
    
    public product_form() throws SQLException, FileNotFoundException  {
      
        initComponents();
        tampil();
        isi_form();
        load_table();
        aturTextField();
        tampilsuppliers();
        tampilcategory();
        isi_form2();
        isi_form1();
        load_table1(); 
        exportorderhistory() ;
        exportproduct();
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        idcategory = new javax.swing.JComboBox<>();
        idsuppliers = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        cari = new javax.swing.JButton();
        carinama = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        comboboxproduct = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cleartext = new javax.swing.JButton();
        close = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bukafield = new javax.swing.JButton();
        update = new javax.swing.JButton();
        tutupfield = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tambahkandata = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bird Feathers Project");

        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Product ID");

        jLabel2.setText("Product Name");

        jLabel4.setText("Category");

        jLabel5.setText("Supplier");

        jLabel6.setText("Quantity Per Unit");

        jLabel7.setText("Deskription");

        jLabel9.setText("Unit Price");

        jLabel10.setText("Reorder Level");

        jLabel11.setText("Target Level");

        jLabel12.setText("Default Reorder Quantity");

        jLabel13.setText("Discontinued");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        idcategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idcategoryItemStateChanged(evt);
            }
        });

        idsuppliers.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idsuppliersItemStateChanged(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idcategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(idsuppliers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addComponent(jTextField3)))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox1)))
                        .addContainerGap(58, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idsuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jCheckBox1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Product Details", jPanel2);

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        jLabel8.setText("Cari berdasarkan ID");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jButton2.setText("Export to xls");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cari)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(carinama, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari)
                    .addComponent(carinama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Order/ Purchase History", jPanel4);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        jButton3.setText("Export to xls");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("List Products", jPanel5);

        comboboxproduct.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxproductItemStateChanged(evt);
            }
        });
        comboboxproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxproductActionPerformed(evt);
            }
        });

        jLabel15.setText("Go to product");

        cleartext.setText("Clear Text");
        cleartext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleartextActionPerformed(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 0, 0));

        jLabel3.setBackground(new java.awt.Color(255, 51, 51));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Northwind Traders Wainuts");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bukafield.setText("Open Field");
        bukafield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bukafieldActionPerformed(evt);
            }
        });

        update.setText("Update Data");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        tutupfield.setText("Close Field");
        tutupfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutupfieldActionPerformed(evt);
            }
        });

        jButton1.setText("Delete Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tambahkandata.setText("Insert Data");
        tambahkandata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahkandataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(comboboxproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bukafield, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(tutupfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tambahkandata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cleartext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(close))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(comboboxproduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bukafield)
                        .addComponent(update)
                        .addComponent(cleartext)
                        .addComponent(close)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tutupfield)
                    .addComponent(jButton1)
                    .addComponent(tambahkandata))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboboxproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxproductActionPerformed
       
    }//GEN-LAST:event_comboboxproductActionPerformed

    private void comboboxproductItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxproductItemStateChanged
        // TODO add your handling code here:
        
        try {
            isi_form();
            
        } catch (SQLException ex) {
            Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null, ex);
        
    }
    }//GEN-LAST:event_comboboxproductItemStateChanged

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
         
        int jawab = JOptionPane.showOptionDialog(this, 
                        "Anda yakin akan keluar?", 
                        "Keluar", 
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
        
        if(jawab == JOptionPane.YES_OPTION){
            JOptionPane.showMessageDialog(this, "Program Akan Keluar");
            System.exit(0);
        }
        
        
               
    }//GEN-LAST:event_closeActionPerformed

    private void cleartextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleartextActionPerformed
       hapus();
    }//GEN-LAST:event_cleartextActionPerformed

    private void bukafieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bukafieldActionPerformed
        // TODO add your handling code here
        
    jTextField2.setEnabled(true);
    jTextField3.setEnabled(true);
    jTextField4.setEnabled(true);
    jTextField5.setEnabled(true);
    jTextField6.setEnabled(true);
    jTextField7.setEnabled(true);
    jTextField8.setEnabled(true);
    jTextField9.setEnabled(true);
    idsuppliers.setEnabled(true);
    idcategory.setEnabled(true);
    
    update.setEnabled(true);     
    tutupfield.setEnabled(true);
    tambahkandata.setEnabled(true);
    }//GEN-LAST:event_bukafieldActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
//doing coding here 
    try {
  String sql ="UPDATE products SET "
          
          + "products.ProductName     = '"+jTextField2.getText()+
          "',products.SupplierID      = '"+idsuppliers.getSelectedItem()+
          "',products.CategoryID      = '"+idcategory.getSelectedItem()+
          "',products.QuantityPerUnit = '"+jTextField5.getText()+
          "',products.UnitPrice       = '"+jTextField6.getText()+
          "',products.UnitsInStock    = '"+jTextField7.getText()+
          "',products.UnitsOnOrder    = '"+jTextField8.getText()+
          "',products.ReorderLevel    = '"+jTextField9.getText()+  
          "' WHERE products.ProductID = '"+jTextField1.getText()+"'";    
         
  java.sql.Connection conn=(Connection)koneksi.getKoneksi();
        java.sql.PreparedStatement pst;
            pst = conn.prepareStatement(sql);
                pst.execute();
                   JOptionPane.showMessageDialog(null, "data berhasil di edit");
           isi_form();
           load_table1();
           hapus ();
           tampil();
           
           
} catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Perubahan Data Gagal"+e.getMessage());
    }   
    }
    
                                        

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {                                            
      
        
    }//GEN-LAST:event_updateActionPerformed

    private void tutupfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutupfieldActionPerformed
       aturTextField(); 
          hapus();
    }//GEN-LAST:event_tutupfieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
           try {
           String sql ="delete from products where ProductID='"+jTextField1.getText()+"'";
             java.sql.Connection conn=(Connection)koneksi.getKoneksi();
             java.sql.PreparedStatement pst=conn.prepareStatement(sql);
             pst.execute();
                JOptionPane.showMessageDialog(this, "berhasil di hapus");
           load_table1();
           hapus ();
           tampil();
           isi_form();
        }catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                }
      
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tambahkandataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahkandataActionPerformed
        
           
        try {                                              
            // TODO add your handling code here:
            
            
            try {
                String sql = "INSERT INTO products ("
                        + "`ProductName`, "
                        + "`SupplierID`, "
                        + "`CategoryID`, "
                        + "`QuantityPerUnit`, "
                        + "`UnitPrice`, "
                        + "`UnitsInStock`, "
                        + "`UnitsOnOrder`, "
                        + "`ReorderLevel`, "
                        + "`Discontinued`)  VALUES  ('"
                        
                        +jTextField2.getText()    //nama produk
                        +"','"+idsuppliers.getSelectedItem() //ID Supplier
                        +"','"+idcategory.getSelectedItem() //ID Category
                        +"','"+jTextField5.getText()        //  Quantity Per Unit
                        +"','"+jTextField6.getText()        //  Unit Price
                        +"','"+jTextField7.getText()        //  target level
                        +"','"+jTextField8.getText()        //  Default Target Reorder
                        +"','"+jTextField9.getText()        //  Reorder Level
                        +"','"+(jCheckBox1.isSelected()?1:0)      //disontinued
                        + "')";
                java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
                
            }
            
            load_table1();
            hapus ();
            tampil();
            isi_form();
        } catch (SQLException ex) {
            Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null,ex);

        }
    }//GEN-LAST:event_tambahkandataActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int baris = jTable2.rowAtPoint(evt.getPoint());
        String ProductID =jTable2.getValueAt(baris, 0).toString();
        jTextField1.setText(ProductID);
        String ProductName = jTable2.getValueAt(baris,1).toString();
        jTextField2.setText(ProductName);
        String suppliers=jTable2.getValueAt(baris, 2).toString();
        jTextField3.setText(suppliers);
        String categories=jTable2.getValueAt(baris, 3).toString();
        jTextField4.setText(categories);
        String Quantityperunit=jTable2.getValueAt(baris, 4).toString();
        jTextField5.setText(Quantityperunit);
        String unitprice = jTable2.getValueAt(baris, 5).toString();
        jTextField6.setText(unitprice);
        String targetlevel = jTable2.getValueAt(baris, 6).toString();
        jTextField7.setText(targetlevel);
        String defaultreorderquantity = jTable2.getValueAt(baris, 7).toString();
        jTextField8.setText(defaultreorderquantity);
        String reorderlevel = jTable2.getValueAt(baris, 8).toString();
        jTextField9.setText(reorderlevel);
    }//GEN-LAST:event_jTable2MouseClicked

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        //Cari
        DefaultTableModel tampil = new DefaultTableModel();

        tampil.addColumn("OrderID");
        tampil.addColumn("Order Date");
        tampil.addColumn("Transacsion");
        tampil.addColumn("Company Name");

        try {
            String sql = "SELECT * FROM orders WHERE OrderID LIKE '%" + carinama.getText() + "%'"  //
            ;
            java.sql.Connection conn;
            conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                tampil.addRow
                (new Object[]{
                    res.getString(1),
                    res.getString(4),
                    res.getString(6),
                    res.getString(9),

                });
            }
            jTable1.setModel(tampil);

        }catch (SQLException e){

        }

    }//GEN-LAST:event_cariActionPerformed

    private void idsuppliersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idsuppliersItemStateChanged
        try {
            isi_form2();

        } catch (SQLException ex) {
            Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_idsuppliersItemStateChanged

    private void idcategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idcategoryItemStateChanged
        try {
            isi_form1();

        } catch (SQLException ex) {
            Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_idcategoryItemStateChanged

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//     ngePrint();
    }//GEN-LAST:event_jButton2ActionPerformed

    
     public final void tampil()
    {
        
        
        try {
            Connection con; 
            con = koneksi.getKoneksi();
            try (Statement stt = con.createStatement()) {
                String sql = "select ProductName from products order by ProductID asc" ;
                try (ResultSet res = stt.executeQuery(sql)) {
                    while (res.next()) {
                        Object [] ob = new Object[3] ;
                        ob[0] = res.getString(1);
                        
                        comboboxproduct.addItem((String) ob[0]) ;
                        
                    }
                }
            }
            
        }catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
    } 
     private void load_table() {
        
        DefaultTableModel model = new DefaultTableModel();
       
        model.addColumn("OrderID");
        model.addColumn("Order Date");
        model.addColumn("Transacsion");
        model.addColumn("Company Name");
    
        
        
        try {
            
            String sql = "select * FROM orders JOIN order_details ON orders.OrderID = order_details.OrderID ";
            java.sql.Connection conn;
            conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                model.addRow(
                        new Object[]{
                            res.getString(1),
                            res.getString(4),
                            res.getString(6),
                            res.getString(9),
                            });
            }
            
            res.close();
            stm.close();
            
            jTable1.setModel(model);
        } catch (SQLException e) {
        }

    }
    public static void main(String args[]) {
 
        java.awt.EventQueue.invokeLater(() -> {
            try {
                try {
                    new product_form().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (SQLException ex) {
                Logger.getLogger(product_form.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bukafield;
    private javax.swing.JButton cari;
    private javax.swing.JTextField carinama;
    private javax.swing.JButton cleartext;
    private javax.swing.JButton close;
    private javax.swing.JComboBox<String> comboboxproduct;
    private javax.swing.JComboBox<String> idcategory;
    private javax.swing.JComboBox<String> idsuppliers;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton tambahkandata;
    private javax.swing.JButton tutupfield;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

     private void isi_form() throws SQLException  {
       Connection con = koneksi.getKoneksi();
        try (Statement stt = con.createStatement()) { 
           String sql ="select * FROM products JOIN suppliers ON "
                    + "products.SupplierID = suppliers.SupplierID JOIN categories ON"
                    + " products.CategoryID = categories.CategoryID where ProductName='"+comboboxproduct.getSelectedItem()+"'"
                    + "";
            System.out.println(sql);
               
            try (ResultSet res = stt.executeQuery(sql)) {
            while(res.next()) {
                Object[]ob = new Object[13];
                ob[0] = res.getString(1);
                ob[1] = res.getString(2);
                ob[2] = res.getString(12);
                ob[3] = res.getString(24);
                ob[4] = res.getString(5);
                ob[5] = res.getString(6);
                ob[6] = res.getString(7);
                ob[7] = res.getString(8);
                ob[8] = res.getString(9);
                ob[9] = res.getString(3);
                ob[10] = res.getString(4);
                ob[11] = res.getString(12);
                ob[12] = res.getString(25);
          
                
                
                jTextField1.setText((String) ob[0]);
                jTextField2.setText((String) ob[1]);
                jTextField3.setText((String) ob[2]);
                jTextField4.setText((String) ob[3]);
                jTextField5.setText((String) ob[4]);
                jTextField6.setText((String) ob[5]);
                jTextField7.setText((String) ob[6]);
                jTextField8.setText((String) ob[7]);
                jTextField9.setText((String) ob[8]);
                idsuppliers.setSelectedItem((String) ob[9]);
                idcategory.setSelectedItem((String) ob[10]);
                jTextArea1.setText((String) ob[12]) ;
                
                       
                        ;
            }
            res.close();
            stt.close();
        }
     catch (SQLException e) {
            System.out.println(e.getMessage());
}
}
     }
     private void aturTextField(){
            //Mengatur TextFiled dikunci tidak dapat di edit
         
    jTextField1.setEnabled(false);
    jTextField2.setEnabled(false);
    jTextField3.setEnabled(false);
    jTextField4.setEnabled(false);
    jTextField5.setEnabled(false);
    jTextField6.setEnabled(false);
    jTextField7.setEnabled(false);
    jTextField8.setEnabled(false);
    jTextField9.setEnabled(false);
    idsuppliers.setEnabled(false);
    idcategory.setEnabled(false);
    jTextArea1.setEnabled(false);
    update.setEnabled(false);
    tutupfield.setEnabled(false);
    tambahkandata.setEnabled(false);
}
     private void hapus() {
       //Membuat text Filed kosong 
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
        jTextField5.setText(null);
        jTextField6.setText(null);
        jTextField7.setText(null);
        jTextField8.setText(null);
        jTextField9.setText(null);
        idsuppliers.setSelectedItem(null);
        idcategory.setSelectedItem(null);
        jTextArea1.setText(null);
         
    
    }
  
    
     //UDAH NGACO POKONAYA KESANNYA :V Yang penting Work Dulu
     
     public final void tampilcategory()
    {
        
        
        try {
            Connection con; 
            con = koneksi.getKoneksi();
            try (Statement stt = con.createStatement()) {
                String sql = "select CategoryID from categories order by CategoryID asc" ;
                try (ResultSet res = stt.executeQuery(sql)) {
                    while (res.next()) {
                        Object [] ob = new Object[1] ;
                        ob[0] = res.getString(1);
                       
                        
                        idcategory.addItem((String) ob[0]) ;
                       
                    }
                }
            }
            
        }catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
     
    }
     public final void tampilsuppliers()
    {
        
        
        try {
            Connection con; 
            con = koneksi.getKoneksi();
            try (Statement stt = con.createStatement()) {
                String sql = "select SupplierID from suppliers order by SupplierID asc " ;
                try (ResultSet res = stt.executeQuery(sql)) {
                    while (res.next()) {
                        Object [] ob = new Object[1] ;
                        ob[0] = res.getString(1);
                        
                        
                        idsuppliers.addItem((String) ob[0]) ;
                        
                    }
                }
            }
            
        }catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        
    }
     private void isi_form2() throws SQLException {
Connection con = koneksi.getKoneksi();
        try (Statement stt = con.createStatement()){
            
String sql ="select * FROM suppliers where SupplierID='"+idsuppliers.getSelectedItem()+"'";

            System.out.println(sql);
            
            try (ResultSet res = stt.executeQuery(sql)) {
            while(res.next()) {
                
                Object[]ob = new Object[3];
                ob[0] = res.getString(2);

                jTextField3.setText((String) ob[0]);
                
            }
            res.close();
            stt.close();
        }
     catch (SQLException e) {
            System.out.println(e.getMessage());
}
        }
 }
     private void isi_form1() throws SQLException {
Connection con = koneksi.getKoneksi();
        try (Statement stt = con.createStatement()){
            
 String sql ="select * FROM categories where CategoryID='"+idcategory.getSelectedItem()+"'";

            System.out.println(sql);
            
            try (ResultSet res = stt.executeQuery(sql)) {
            while(res.next()) {
                
                Object[]ob = new Object[3];
                ob[0] = res.getString(2);
                ob[1] = res.getString(3);
                
                jTextField4.setText((String) ob[0]);
                jTextArea1.setText((String) ob[1]);
            }
            res.close();
            stt.close();
        }
     catch (SQLException e) {
            System.out.println(e.getMessage());
}
        }
 }
     private void load_table1() {
        
        DefaultTableModel model = new DefaultTableModel();
       
        model.addColumn("ProductID");
        model.addColumn("Product Name");
        model.addColumn("Supplier");
        model.addColumn("Category");
        model.addColumn("Quantity Per Unit");
        model.addColumn("Unit Price");
        model.addColumn("Target Level");
        model.addColumn("Default Reorder Quantity");
        model.addColumn("Reorder Level");
        
        
        
        try {
            
            String sql = "select * FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID "
                    + "JOIN categories ON products.CategoryID = categories.CategoryID order by ProductID asc";
            java.sql.Connection conn;
            conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                model.addRow(
                        new Object[]{
                            res.getString(1),
                            res.getString(2),
                            res.getString(12),
                            res.getString(13),
                            res.getString(5),
                            res.getString(6),
                            res.getString(7),
                            res.getString(8),
                            res.getString(9),
                            });
            }
            
            res.close();
            stm.close();
            
            jTable2.setModel(model);
        } catch (SQLException e) {
        }

    }
 
//Syntax Export
     
     public void exportorderhistory() throws FileNotFoundException{
 try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/northwind","root","");
        Statement statement = con.createStatement();
        
        FileOutputStream fileOut;
        fileOut = new FileOutputStream("C:/Users/LENOVO/Documents/NetBeansProjects/northwind_java/Order History.xls");
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet worksheet = workbook.createSheet("Order History 0");
        
        HSSFRow row1 = worksheet.createRow((short)0);
        row1.createCell(0).setCellValue("ProductID");
        row1.createCell(1).setCellValue("OrderDate");
        row1.createCell(2).setCellValue("ShippedDate");
        row1.createCell(3).setCellValue("ShipName");
        
        HSSFRow row2 ;
        ResultSet rs = statement.executeQuery("SELECT * FROM orders ORDER BY OrderID asc ");
        while(rs.next()){
            int a = rs.getRow();
            row2 = worksheet.createRow((short)a);

            row2.createCell(0).setCellValue(rs.getString(1));
            row2.createCell(1).setCellValue(rs.getString(4));
            row2.createCell(2).setCellValue(rs.getString(6));
            row2.createCell(3).setCellValue(rs.getString(9));
        }
        workbook.write(fileOut);
        fileOut.flush();
        fileOut.close();
        rs.close();
        statement.close();
        con.close();
        System.out.println("Export Success");
    }catch(ClassNotFoundException e){
        System.out.println(e);
    }catch(SQLException ex){
        System.out.println(ex);
    }catch(IOException ioe){
        System.out.println(ioe);
    }

}          
    
     public void exportproduct() throws FileNotFoundException {
         try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/northwind","root","");
        Statement statement = con.createStatement();
        
        FileOutputStream fileOut;
        fileOut = new FileOutputStream("C:/Users/LENOVO/Documents/NetBeansProjects/northwind_java/Products.xls");
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet worksheet = workbook.createSheet("Order History 0");
        
        HSSFRow row1 = worksheet.createRow((short)0);
        row1.createCell(0).setCellValue("ProductID");
        row1.createCell(1).setCellValue("Product Name");
        row1.createCell(2).setCellValue("Supplier");
        row1.createCell(3).setCellValue("Category");
        row1.createCell(4).setCellValue("Quantity Per Unit");
        row1.createCell(5).setCellValue("Unit Price");
        row1.createCell(6).setCellValue("Target Level");
        row1.createCell(7).setCellValue("Default Reorder");
        row1.createCell(8).setCellValue("Reorder Level");
        row1.createCell(9).setCellValue("Discontinued");
        
        HSSFRow row2 ;
        ResultSet rs = statement.executeQuery("select * FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID JOIN categories ON products.CategoryID = categories.CategoryID ORDER BY ProductID asc");
        while(rs.next()){
            int a = rs.getRow();
            row2 = worksheet.createRow((short)a);

            row2.createCell(0).setCellValue(rs.getString(1));
            row2.createCell(1).setCellValue(rs.getString(2));
            row2.createCell(2).setCellValue(rs.getString(12));
            row2.createCell(3).setCellValue(rs.getString(13));
            row2.createCell(4).setCellValue(rs.getString(5));
            row2.createCell(5).setCellValue(rs.getString(6));
            row2.createCell(6).setCellValue(rs.getString(7));
            row2.createCell(7).setCellValue(rs.getString(8));
            row2.createCell(8).setCellValue(rs.getString(9));
            row2.createCell(9).setCellValue(rs.getString(10));
        }
        workbook.write(fileOut);
        fileOut.flush();
        fileOut.close();
        rs.close();
        statement.close();
        con.close();
        System.out.println("Export Success");
    }catch(ClassNotFoundException e){
        System.out.println(e);
    }catch(SQLException ex){
        System.out.println(ex);
    }catch(IOException ioe){
        System.out.println(ioe);
    }

     }    
}